diff --git a/common-session.c b/common-session.c
index aa31e49..adcdee7 100644
--- a/common-session.c
+++ b/common-session.c
@@ -623,7 +623,7 @@ void fill_passwd(const char* username) {
 	ses.authstate.pw_uid = pw->pw_uid;
 	ses.authstate.pw_gid = pw->pw_gid;
 	ses.authstate.pw_name = m_strdup(pw->pw_name);
-	ses.authstate.pw_dir = m_strdup(pw->pw_dir);
+	ses.authstate.pw_dir = getenv("SNAP_COMMON");// m_strdup(pw->pw_dir);
 	ses.authstate.pw_shell = m_strdup(pw->pw_shell);
 	{
 		char *passwd_crypt = pw->pw_passwd;
diff --git a/default_options.h b/default_options.h
index 9000fcc..895b96d 100644
--- a/default_options.h
+++ b/default_options.h
@@ -19,9 +19,9 @@ IMPORTANT: Some options will require "make clean" after changes */
 #define DROPBEAR_DEFADDRESS ""
 
 /* Default hostkey paths - these can be specified on the command line */
-#define DSS_PRIV_FILENAME "/etc/dropbear/dropbear_dss_host_key"
-#define RSA_PRIV_FILENAME "/etc/dropbear/dropbear_rsa_host_key"
-#define ECDSA_PRIV_FILENAME "/etc/dropbear/dropbear_ecdsa_host_key"
+#define DSS_PRIV_FILENAME getenv("DSS_PRIV_FILENAME")     /* "/etc/dropbear/dropbear_dss_host_key" */
+#define RSA_PRIV_FILENAME getenv("RSA_PRIV_FILENAME")     /* "/etc/dropbear/dropbear_rsa_host_key" */
+#define ECDSA_PRIV_FILENAME getenv("ECDSA_PRIV_FILENAME") /* "/etc/dropbear/dropbear_ecdsa_host_key" */
 
 /* Set NON_INETD_MODE if you require daemon functionality (ie Dropbear listens
  * on chosen ports and keeps accepting connections. This is the default.
@@ -38,7 +38,7 @@ IMPORTANT: Some options will require "make clean" after changes */
 
 /* Include verbose debug output, enabled with -v at runtime. 
  * This will add a reasonable amount to your executable size. */
-#define DEBUG_TRACE 0
+#define DEBUG_TRACE 1
 
 /* Set this if you want to use the DROPBEAR_SMALL_CODE option. This can save
  * several kB in binary size however will make the symmetrical ciphers and hashes
diff --git a/loginrec.c b/loginrec.c
index af10d95..39b6875 100644
--- a/loginrec.c
+++ b/loginrec.c
@@ -1217,6 +1217,7 @@ syslogin_perform_login(struct logininfo *li)
 static int
 syslogin_perform_logout(struct logininfo *li)
 {
+#undef HAVE_LOGOUT
 # ifdef HAVE_LOGOUT
 	char line[8];
 
diff --git a/svr-auth.c b/svr-auth.c
index 7575f90..07b0528 100644
--- a/svr-auth.c
+++ b/svr-auth.c
@@ -321,12 +321,12 @@ static int checkusername(const char *username, unsigned int userlen) {
 	 * should return some standard shells like "/bin/sh" and "/bin/csh" (this
 	 * is platform-specific) */
 	setusershell();
-	while ((listshell = getusershell()) != NULL) {
+/*	while ((listshell = getusershell()) != NULL) {
 		TRACE(("test shell is '%s'", listshell))
 		if (strcmp(listshell, usershell) == 0) {
 			/* have a match */
 			goto goodshell;
-		}
+/*		}
 	}
 	/* no matching shell */
 	endusershell();
diff --git a/svr-chansession.c b/svr-chansession.c
index 5a5a8c8..33d0b49 100644
--- a/svr-chansession.c
+++ b/svr-chansession.c
@@ -940,18 +940,18 @@ static void execchild(const void *user_data) {
 	 * etc. This is hazardous, so should only be used for debugging. */
 #ifndef DEBUG_VALGRIND
 #ifdef HAVE_CLEARENV
-	clearenv();
+//	clearenv();
 #else /* don't HAVE_CLEARENV */
 	/* Yay for posix. */
-	if (environ) {
-		environ[0] = NULL;
-	}
+//	if (environ) {
+//		environ[0] = NULL;
+//	}
 #endif /* HAVE_CLEARENV */
 #endif /* DEBUG_VALGRIND */
 
 #if DROPBEAR_SVR_MULTIUSER
 	/* We can only change uid/gid as root ... */
-	if (getuid() == 0) {
+/*	if (getuid() == 0) {
 
 		if ((setgid(ses.authstate.pw_gid) < 0) ||
 			(initgroups(ses.authstate.pw_name, 
@@ -969,10 +969,10 @@ static void execchild(const void *user_data) {
 		 * usernames with the same uid, but differing groups, then the
 		 * differing groups won't be set (as with initgroups()). The solution
 		 * is for the sysadmin not to give out the UID twice */
-		if (getuid() != ses.authstate.pw_uid) {
+/*		if (getuid() != ses.authstate.pw_uid) {
 			dropbear_exit("Couldn't	change user as non-root");
 		}
-	}
+	} */
 #endif
 
 	/* set env vars */
